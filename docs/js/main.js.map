{"version":3,"file":"main.js","mappings":"mBAuFAA,YAAY,eAtF4C,CACpDC,UAAW,CACPC,OAAQ,CACJC,MAAO,GACPC,QAAS,CACLC,QAAQ,EACRC,WAAY,MAGpBC,MAAO,CACHJ,MAAO,WAEXK,MAAO,CACHC,KAAM,UAEVC,QAAS,CACLP,MAAO,GACPQ,QAAQ,EACRC,KAAM,CACFP,QAAQ,EACRQ,MAAO,EACPC,YAAa,GACbC,MAAM,IAGdC,KAAM,CACFb,MAAO,EACPQ,QAAQ,EACRC,KAAM,CACFP,QAAQ,EACRQ,MAAO,EACPI,SAAU,GACVF,MAAM,IAGdG,YAAa,CACTb,QAAQ,EACRc,SAAU,IACVZ,MAAO,UACPG,QAAS,GACTU,MAAO,GAEXC,KAAM,CACFhB,QAAQ,EACRQ,MAAO,EACPS,UAAW,OACXX,QAAQ,EACRY,UAAU,EACVC,SAAU,MACVC,QAAQ,EACRC,QAAS,CACLrB,QAAQ,EACRsB,QAAS,IACTC,QAAS,QAIrBC,cAAe,CACXC,UAAW,SACXC,OAAQ,CACJC,QAAS,CACL3B,QAAQ,EACR4B,KAAM,QAEVC,QAAS,CACL7B,QAAQ,EACR4B,KAAM,QAEVE,QAAQ,GAEZC,MAAO,CACHC,KAAM,CACFlB,SAAU,IACVD,YAAa,CACTR,QAAS,IAGjB4B,KAAM,CACFC,aAAc,KAI1BC,eAAe,IAOnBC,SAASC,iBAAoC,gBAAgBC,SAASC,IAClEA,EAAOC,iBAAiB,SAAUC,IAC9BA,EAAEC,iBACF,MAAMC,EAAsBJ,EAAOK,aAAa,QAChD,GAAID,EAAM,CACN,MAAME,EAAyBT,SAASU,cAAcH,GAClDE,GACAA,EAAOE,eAAe,CAClBC,SAAU,SACVC,MAAO,SAGnB,QAWR,MAMMC,EAAiC,IAAIC,sBAAsBC,IAC7DA,EAAQd,SAASe,IACTA,EAAMC,iBACND,EAAMR,OAAOU,UAAUC,IAAI,WAC3BN,EAASO,UAAUJ,EAAMR,cAVI,CACrCa,KAAM,KACNC,WAAY,MACZC,UAAW,KAafxB,SAASC,iBAA8B,WAAWC,SAASuB,IACvDA,EAAQC,MAAMzD,QAAU,IACxBwD,EAAQC,MAAMC,UAAY,mBAC1BF,EAAQC,MAAME,WAAa,iDAC3Bd,EAASe,QAAQJ,MAIrB,MAAMC,EAA0B1B,SAAS8B,cAAc,SACvDJ,EAAMK,YAAc,0GAMpB/B,SAASgC,KAAKC,YAAYP,E","sources":["webpack://vio.landingpage/./src/client/main.ts"],"sourcesContent":["// Particles.js Configuration\r\nconst particlesConfig: particlesJS.IParticlesJSConfig = {\r\n    particles: {\r\n        number: {\r\n            value: 80,\r\n            density: {\r\n                enable: true,\r\n                value_area: 800\r\n            }\r\n        },\r\n        color: {\r\n            value: '#6a8759'\r\n        },\r\n        shape: {\r\n            type: 'circle'\r\n        },\r\n        opacity: {\r\n            value: 0.5,\r\n            random: true,\r\n            anim: {\r\n                enable: true,\r\n                speed: 1,\r\n                opacity_min: 0.1,\r\n                sync: false\r\n            }\r\n        },\r\n        size: {\r\n            value: 3,\r\n            random: true,\r\n            anim: {\r\n                enable: true,\r\n                speed: 2,\r\n                size_min: 0.1,\r\n                sync: false\r\n            }\r\n        },\r\n        line_linked: {\r\n            enable: true,\r\n            distance: 150,\r\n            color: '#6a8759',\r\n            opacity: 0.4,\r\n            width: 1\r\n        },\r\n        move: {\r\n            enable: true,\r\n            speed: 2,\r\n            direction: 'none',\r\n            random: true,\r\n            straight: false,\r\n            out_mode: 'out',\r\n            bounce: false,\r\n            attract: {\r\n                enable: true,\r\n                rotateX: 600,\r\n                rotateY: 1200\r\n            }\r\n        }\r\n    },\r\n    interactivity: {\r\n        detect_on: 'canvas',\r\n        events: {\r\n            onhover: {\r\n                enable: true,\r\n                mode: 'grab'\r\n            },\r\n            onclick: {\r\n                enable: true,\r\n                mode: 'push'\r\n            },\r\n            resize: true\r\n        },\r\n        modes: {\r\n            grab: {\r\n                distance: 140,\r\n                line_linked: {\r\n                    opacity: 1\r\n                }\r\n            },\r\n            push: {\r\n                particles_nb: 4\r\n            }\r\n        }\r\n    },\r\n    retina_detect: true\r\n};\r\n\r\n// Initialize particles\r\nparticlesJS('particles-js', particlesConfig);\r\n\r\n// Smooth scrolling for navigation links\r\ndocument.querySelectorAll<HTMLAnchorElement>('a[href^=\"#\"]').forEach((anchor: HTMLAnchorElement): void => {\r\n    anchor.addEventListener('click', (e: Event): void => {\r\n        e.preventDefault();\r\n        const href: string | null = anchor.getAttribute('href');\r\n        if (href) {\r\n            const target: Element | null = document.querySelector(href);\r\n            if (target) {\r\n                target.scrollIntoView({\r\n                    behavior: 'smooth',\r\n                    block: 'start'\r\n                });\r\n            }\r\n        }\r\n    });\r\n});\r\n\r\n// Intersection Observer for fade-in animations\r\ninterface ObserverOptions {\r\n    root: null;\r\n    rootMargin: string;\r\n    threshold: number;\r\n}\r\n\r\nconst observerOptions: ObserverOptions = {\r\n    root: null,\r\n    rootMargin: '0px',\r\n    threshold: 0.1\r\n};\r\n\r\nconst observer: IntersectionObserver = new IntersectionObserver((entries: IntersectionObserverEntry[]): void => {\r\n    entries.forEach((entry: IntersectionObserverEntry): void => {\r\n        if (entry.isIntersecting) {\r\n            entry.target.classList.add('fade-in');\r\n            observer.unobserve(entry.target);\r\n        }\r\n    });\r\n}, observerOptions);\r\n\r\n// Observe all sections\r\ndocument.querySelectorAll<HTMLElement>('section').forEach((section: HTMLElement): void => {\r\n    section.style.opacity = '0';\r\n    section.style.transform = 'translateY(20px)';\r\n    section.style.transition = 'opacity 0.6s ease-out, transform 0.6s ease-out';\r\n    observer.observe(section);\r\n});\r\n\r\n// Add fade-in class styles\r\nconst style: HTMLStyleElement = document.createElement('style');\r\nstyle.textContent = `\r\n    .fade-in {\r\n        opacity: 1 !important;\r\n        transform: translateY(0) !important;\r\n    }\r\n`;\r\ndocument.head.appendChild(style); "],"names":["particlesJS","particles","number","value","density","enable","value_area","color","shape","type","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","width","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","push","particles_nb","retina_detect","document","querySelectorAll","forEach","anchor","addEventListener","e","preventDefault","href","getAttribute","target","querySelector","scrollIntoView","behavior","block","observer","IntersectionObserver","entries","entry","isIntersecting","classList","add","unobserve","root","rootMargin","threshold","section","style","transform","transition","observe","createElement","textContent","head","appendChild"],"sourceRoot":""}